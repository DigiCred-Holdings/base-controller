services:  
  controller-db:
    image: postgres:15
    container_name: workflow-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${WORKFLOW_DB_USER}
      POSTGRES_PASSWORD: ${WORKFLOW_DB_PASSWORD}
      POSTGRES_DB: ${WORKFLOW_DB_NAME}
    ports:
      - "5435:5432"
    restart: unless-stopped
    volumes:
      - controller-db-data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf",
               "-c", "hba_file=/etc/postgresql/pg_hba.conf",]
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "${WORKFLOW_DB_USER}", "-d", "${WORKFLOW_DB_NAME}"]
    #   interval: 10s
    #   retries: 5
    #   timeout: 5s

  redis:
    image: redis:alpine
    container_name: controller-redis
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - redis-data:/data

  controller:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: controller
    ports:
      - "3000:3000"
    working_dir: /usr/src/app
    command: npm run start
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${WORKFLOW_DB_USER}:${WORKFLOW_DB_PASSWORD}@controller-db:5432/${WORKFLOW_DB_NAME}
      - REDIS_HOST=redis
    depends_on:
      - controller-db
      - redis

volumes:
  controller-db-data:
  redis-data: