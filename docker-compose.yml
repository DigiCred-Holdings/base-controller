services:  
  postgres:
    image: postgres:15
    container_name: workflow-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${WORKFLOW_DB_USER}
      POSTGRES_PASSWORD: ${WORKFLOW_DB_PASSWORD}
      POSTGRES_DB: ${WORKFLOW_DB_NAME}
    ports:
      - "5435:5432"
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf",
                "-c", "hba_file=/etc/postgresql/pg_hba.conf",]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${WORKFLOW_DB_USER} -d ${WORKFLOW_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: crms-controller-redis
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  node:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: crms-controller-app
    ports:
      - "3000:3000"
    working_dir: /usr/src/app
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    volumes:
      - sis-upload-data:/usr/src/app/uploads

volumes:
  postgres-data:
  redis-data:
  sis-upload-data:
